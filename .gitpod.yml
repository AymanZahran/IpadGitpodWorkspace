image: aymanzahran/ipad-gitpod-image
  #file: Dockerfile.Dockerfile
tasks:
  - name: persist env
    command: eval $(gp env -e)

  - name: Authenticate Terraform Cloud
    init: |
      mkdir -p ~/.terraform.d/
      cat << EOF > ~/.terraform.d/credentials.tfrc.json
      {
        "credentials": {
          "app.terraform.io": {
            "token": "$TF_API_TOKEN"
          }
        }
      }
      EOF
    command: |
      echo "Terraform Authenticated"
      gp sync-done terraform-authenticated
  
  - name: Authenticate AWS
    init: |
      echo "[gitpod]" > ~/.aws/config
      echo "region = $AWS_DEFAULT_REGION" >> ~/.aws/config
      echo "cli_auto_prompt = on-partial" >> ~/.aws/config
      echo "[gitpod]" > ~/.aws/credentials
      echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
      echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    command: |
      echo "AWS Authenticated"
      gp sync-done provider-authenticated

  - name: Deploy Kubernetes Cluster
    init: |
      gp sync-await terraform-authenticated
      gp sync-await provider-authenticated
    command: |
      cd Infrastructure/AWS
      yarn install && yarn build
      cdk bootstrap
      # cdk deploy
      echo "Kubernetes Cluster Deployed"
      gp sync-done deploy-kubernetes-cluster

  - name: Generate Kubernetes Manifests
    init: |
      gp sync-await deploy-kubernetes-cluster
      cd Configuration
    command: |
      sleep 20
      gp sync-done generate-kubernetes-manifests
      yarn install && yarn build
  
  # - name: Launch ArgoCD
  #   init: |
  #     gp sync-await generate-kubernetes-manifests
  #     kubectl create namespace argocd
  #     kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  #     kubectl apply -f Configuration/dist/argo.k8s.yaml
  #   command: |
  #     sleep 20
  #     kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode && echo
  #     kubectl port-forward svc/argocd-server 8080:443 -n argocd  
      
  # - name: Expose Services
  #   init: |
  #     gp sync-await generate-kubernetes-manifests
  #   command: |
  #     sleep 60
  #     kubectl port-forward -n tekton-pipelines svc/tekton-dashboard 9097:9097 &
  #     kubectl port-forward -n kubernetes-dashboard svc/kubernetes-dashboard 3000:443 &
  #     kubectl port-forward -n kube-prometheus-stack svc/kube-prometheus-stack-prometheus 9090:9090 &
  #     kubectl port-forward -n kube-prometheus-stack svc/kube-prometheus-stack-grafana 9091:80 &
  #     kubectl autoscale deployment -n nginx nginx-ingress-ingress-nginx-controller --cpu-percent=50 --min=1 --max=3 &

vscode:
  extensions:
    - ms-azuretools.vscode-docker
    - ms-kubernetes-tools.vscode-kubernetes-tools
    - amazonwebservices.aws-toolkit-vscode
    - ms-toolsai.jupyter
    - esbenp.prettier-vscode
    - dbaeumer.vscode-eslint
    - hashicorp.terraform
    - eg2.vscode-npm-script
    - christian-kohler.npm-intellisense
    - christian-kohler.path-intellisense
    - ms-python.python
    - rangav.vscode-thunder-client
    - PKief.material-icon-theme
