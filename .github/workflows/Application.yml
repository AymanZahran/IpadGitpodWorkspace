name: Application

on:
  schedule:
    - cron: 0 1 * * *
  push:
    branches:
      - master
    paths:
      - Application/**
  pull_request:
    branches:
      - master
    paths:
      - Application/**

jobs:
  BuildPushJenkinsImageToDockerHub:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: Application/Jenkins
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: List
        run: ls
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Jenkins Image
        run: docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.JENKINS_IMAGE_NAME}}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.JENKINS_IMAGE_NAME}}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif
  
  BuildPushAnsibleControllerImageToDockerHub:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: Application/Ansible
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: List
        run: ls
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Generate id_rsa
        run: ssh-keygen -t rsa -N "my passphrase" -C "test key" -f id_rsa
      - name: Build Ansible Controller Image
        run: docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.ANSIBLE_CONTROLLER_IMAGE_NAME}}:${{ github.sha }} -f Dockerfile.AnsibleController
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.ANSIBLE_CONTROLLER_IMAGE_NAME}}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif
      - name: Push Ansible Controller Image
        run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.ANSIBLE_CONTROLLER_IMAGE_NAME}}:${{ github.sha }}
      - name: Build Ansible Target Image
        run: docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.ANSIBLE_TARGET_IMAGE_NAME}}:${{ github.sha }} -f Dockerfile.AnsibleTarget
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.ANSIBLE_TARGET_IMAGE_NAME}}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif
      - name: Push Ansible Target Image
        run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.ANSIBLE_TARGET_IMAGE_NAME}}:${{ github.sha }}
      